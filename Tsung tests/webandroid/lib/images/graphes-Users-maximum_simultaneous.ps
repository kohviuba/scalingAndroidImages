%!PS-Adobe-2.0
%%Title: images/graphes-Users-maximum_simultaneous.ps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Mon Apr 29 13:03:43 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (images/graphes-Users-maximum_simultaneous.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (root)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Apr 29 13:03:43 2013)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
854 448 M
6136 0 V
stroke
LTb
854 448 M
63 0 V
6073 0 R
-63 0 V
770 448 M
(-100) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 1044 M
6136 0 V
stroke
LTb
854 1044 M
63 0 V
6073 0 R
-63 0 V
-6157 0 R
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 1640 M
6136 0 V
stroke
LTb
854 1640 M
63 0 V
6073 0 R
-63 0 V
-6157 0 R
( 100) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 2236 M
6136 0 V
stroke
LTb
854 2236 M
63 0 V
6073 0 R
-63 0 V
-6157 0 R
( 200) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 2832 M
6136 0 V
stroke
LTb
854 2832 M
63 0 V
6073 0 R
-63 0 V
-6157 0 R
( 300) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 3428 M
6136 0 V
stroke
LTb
854 3428 M
63 0 V
6073 0 R
-63 0 V
-6157 0 R
( 400) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 4024 M
6136 0 V
stroke
LTb
854 4024 M
63 0 V
6073 0 R
-63 0 V
-6157 0 R
( 500) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 4620 M
6136 0 V
stroke
LTb
854 4620 M
63 0 V
6073 0 R
-63 0 V
-6157 0 R
( 600) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 448 M
0 4172 V
stroke
LTb
854 448 M
0 63 V
0 4109 R
0 -63 V
854 308 M
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
1731 448 M
0 3829 V
0 280 R
0 63 V
stroke
LTb
1731 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 200) Cshow
1.000 UL
LTb
1.000 UL
LTa
2607 448 M
0 4172 V
stroke
LTb
2607 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 400) Cshow
1.000 UL
LTb
1.000 UL
LTa
3484 448 M
0 4172 V
stroke
LTb
3484 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 600) Cshow
1.000 UL
LTb
1.000 UL
LTa
4360 448 M
0 4172 V
stroke
LTb
4360 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 800) Cshow
1.000 UL
LTb
1.000 UL
LTa
5237 448 M
0 4172 V
stroke
LTb
5237 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTa
6113 448 M
0 4172 V
stroke
LTb
6113 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1200) Cshow
1.000 UL
LTb
1.000 UL
LTa
6990 448 M
0 4172 V
stroke
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1400) Cshow
1.000 UL
LTb
1.000 UL
LTb
854 4620 N
854 448 L
6136 0 V
0 4172 V
-6136 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 M
(total) Cshow
grestore
LTb
LCb setrgbcolor
3922 98 M
(unit = sec ) Cshow
LTb
3922 4830 M
( maximum_simultaneous) Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
1694 4487 M
(connected) Rshow
LT0
1778 4487 M
399 0 V
898 1116 M
44 23 V
43 -6 V
44 0 V
44 -12 V
44 -47 V
44 0 V
44 30 V
43 -42 V
44 30 V
44 0 V
44 -78 V
44 -18 V
44 72 V
43 0 V
49 -30 V
39 24 V
44 -60 V
44 24 V
44 6 V
43 42 V
44 36 V
48 -90 V
40 -24 V
44 36 V
44 30 V
43 -24 V
44 24 V
44 -12 V
44 -6 V
44 30 V
44 -48 V
43 6 V
44 36 V
44 -24 V
44 -36 V
44 24 V
43 30 V
44 0 V
44 -12 V
44 -6 V
44 -36 V
44 12 V
43 66 V
44 -24 V
44 -42 V
44 24 V
44 -12 V
44 -18 V
43 12 V
44 24 V
44 -60 V
44 24 V
44 -18 V
44 -6 V
43 6 V
44 -12 V
44 12 V
44 -6 V
44 24 V
44 6 V
43 6 V
44 18 V
44 -6 V
44 6 V
44 0 V
44 0 V
43 0 V
44 0 V
44 0 V
44 0 V
44 0 V
43 0 V
44 0 V
44 0 V
44 0 V
44 0 V
44 0 V
43 0 V
44 0 V
44 0 V
44 0 V
44 0 V
44 0 V
43 0 V
44 0 V
44 0 V
44 0 V
44 0 V
44 0 V
43 0 V
44 0 V
44 0 V
44 0 V
44 0 V
44 0 V
43 0 V
44 0 V
44 0 V
44 0 V
44 0 V
44 0 V
43 0 V
stroke 5368 1044 M
44 0 V
44 0 V
44 0 V
44 0 V
43 0 V
44 0 V
44 0 V
44 0 V
44 0 V
44 0 V
43 0 V
44 0 V
44 0 V
44 0 V
44 0 V
44 0 V
43 0 V
44 0 V
44 0 V
44 0 V
44 0 V
44 0 V
43 0 V
44 0 V
44 -77 V
4 77 V
898 1116 Pls
942 1139 Pls
985 1133 Pls
1029 1133 Pls
1073 1121 Pls
1117 1074 Pls
1161 1074 Pls
1205 1104 Pls
1248 1062 Pls
1292 1092 Pls
1336 1092 Pls
1380 1014 Pls
1424 996 Pls
1468 1068 Pls
1511 1068 Pls
1560 1038 Pls
1599 1062 Pls
1643 1002 Pls
1687 1026 Pls
1731 1032 Pls
1774 1074 Pls
1818 1110 Pls
1866 1020 Pls
1906 996 Pls
1950 1032 Pls
1994 1062 Pls
2037 1038 Pls
2081 1062 Pls
2125 1050 Pls
2169 1044 Pls
2213 1074 Pls
2257 1026 Pls
2300 1032 Pls
2344 1068 Pls
2388 1044 Pls
2432 1008 Pls
2476 1032 Pls
2519 1062 Pls
2563 1062 Pls
2607 1050 Pls
2651 1044 Pls
2695 1008 Pls
2739 1020 Pls
2782 1086 Pls
2826 1062 Pls
2870 1020 Pls
2914 1044 Pls
2958 1032 Pls
3002 1014 Pls
3045 1026 Pls
3089 1050 Pls
3133 990 Pls
3177 1014 Pls
3221 996 Pls
3265 990 Pls
3308 996 Pls
3352 984 Pls
3396 996 Pls
3440 990 Pls
3484 1014 Pls
3528 1020 Pls
3571 1026 Pls
3615 1044 Pls
3659 1038 Pls
3703 1044 Pls
3747 1044 Pls
3791 1044 Pls
3834 1044 Pls
3878 1044 Pls
3922 1044 Pls
3966 1044 Pls
4010 1044 Pls
4053 1044 Pls
4097 1044 Pls
4141 1044 Pls
4185 1044 Pls
4229 1044 Pls
4273 1044 Pls
4316 1044 Pls
4360 1044 Pls
4404 1044 Pls
4448 1044 Pls
4492 1044 Pls
4536 1044 Pls
4579 1044 Pls
4623 1044 Pls
4667 1044 Pls
4711 1044 Pls
4755 1044 Pls
4799 1044 Pls
4842 1044 Pls
4886 1044 Pls
4930 1044 Pls
4974 1044 Pls
5018 1044 Pls
5062 1044 Pls
5105 1044 Pls
5149 1044 Pls
5193 1044 Pls
5237 1044 Pls
5281 1044 Pls
5325 1044 Pls
5368 1044 Pls
5412 1044 Pls
5456 1044 Pls
5500 1044 Pls
5544 1044 Pls
5587 1044 Pls
5631 1044 Pls
5675 1044 Pls
5719 1044 Pls
5763 1044 Pls
5807 1044 Pls
5850 1044 Pls
5894 1044 Pls
5938 1044 Pls
5982 1044 Pls
6026 1044 Pls
6070 1044 Pls
6113 1044 Pls
6157 1044 Pls
6201 1044 Pls
6245 1044 Pls
6289 1044 Pls
6333 1044 Pls
6376 1044 Pls
6420 1044 Pls
6464 967 Pls
6468 1044 Pls
1977 4487 Pls
1.000 UP
1.000 UL
LT1
LTb
1694 4347 M
(users) Rshow
LT1
1778 4347 M
399 0 V
854 1044 M
44 221 V
44 339 V
43 251 V
44 298 V
44 238 V
44 220 V
44 227 V
44 256 V
43 215 V
44 250 V
44 173 V
44 161 V
44 95 V
44 251 V
43 131 V
49 0 V
39 12 V
44 0 V
44 0 V
44 0 V
43 0 V
44 0 V
48 0 V
40 0 V
44 0 V
44 0 V
43 0 V
44 0 V
44 0 V
44 0 V
44 0 V
44 0 V
43 0 V
44 0 V
44 0 V
44 0 V
44 0 V
43 0 V
44 0 V
44 0 V
44 0 V
44 0 V
44 0 V
43 0 V
44 0 V
44 0 V
44 0 V
44 0 V
44 0 V
43 0 V
44 0 V
44 0 V
44 0 V
44 0 V
44 0 V
43 0 V
44 0 V
44 0 V
44 0 V
44 0 V
44 0 V
43 0 V
44 0 V
44 0 V
44 0 V
44 0 V
44 0 V
43 0 V
44 0 V
44 0 V
44 0 V
44 0 V
43 0 V
44 0 V
44 0 V
44 0 V
44 0 V
44 0 V
43 0 V
44 0 V
44 0 V
44 0 V
44 0 V
44 0 V
43 0 V
44 0 V
44 0 V
44 0 V
44 0 V
44 0 V
43 0 V
44 0 V
44 0 V
44 0 V
44 0 V
44 0 V
43 0 V
44 0 V
44 0 V
44 0 V
44 0 V
44 0 V
stroke 5325 4382 M
43 0 V
44 0 V
44 0 V
44 0 V
44 0 V
43 0 V
44 0 V
44 0 V
44 0 V
44 0 V
44 0 V
43 0 V
44 0 V
44 0 V
44 0 V
44 0 V
44 0 V
43 0 V
44 0 V
44 0 V
44 0 V
44 0 V
44 0 V
43 0 V
44 0 V
44 0 V
4 0 V
854 1044 Crs
898 1265 Crs
942 1604 Crs
985 1855 Crs
1029 2153 Crs
1073 2391 Crs
1117 2611 Crs
1161 2838 Crs
1205 3094 Crs
1248 3309 Crs
1292 3559 Crs
1336 3732 Crs
1380 3893 Crs
1424 3988 Crs
1468 4239 Crs
1511 4370 Crs
1560 4370 Crs
1599 4382 Crs
1643 4382 Crs
1687 4382 Crs
1731 4382 Crs
1774 4382 Crs
1818 4382 Crs
1866 4382 Crs
1906 4382 Crs
1950 4382 Crs
1994 4382 Crs
2037 4382 Crs
2081 4382 Crs
2125 4382 Crs
2169 4382 Crs
2213 4382 Crs
2257 4382 Crs
2300 4382 Crs
2344 4382 Crs
2388 4382 Crs
2432 4382 Crs
2476 4382 Crs
2519 4382 Crs
2563 4382 Crs
2607 4382 Crs
2651 4382 Crs
2695 4382 Crs
2739 4382 Crs
2782 4382 Crs
2826 4382 Crs
2870 4382 Crs
2914 4382 Crs
2958 4382 Crs
3002 4382 Crs
3045 4382 Crs
3089 4382 Crs
3133 4382 Crs
3177 4382 Crs
3221 4382 Crs
3265 4382 Crs
3308 4382 Crs
3352 4382 Crs
3396 4382 Crs
3440 4382 Crs
3484 4382 Crs
3528 4382 Crs
3571 4382 Crs
3615 4382 Crs
3659 4382 Crs
3703 4382 Crs
3747 4382 Crs
3791 4382 Crs
3834 4382 Crs
3878 4382 Crs
3922 4382 Crs
3966 4382 Crs
4010 4382 Crs
4053 4382 Crs
4097 4382 Crs
4141 4382 Crs
4185 4382 Crs
4229 4382 Crs
4273 4382 Crs
4316 4382 Crs
4360 4382 Crs
4404 4382 Crs
4448 4382 Crs
4492 4382 Crs
4536 4382 Crs
4579 4382 Crs
4623 4382 Crs
4667 4382 Crs
4711 4382 Crs
4755 4382 Crs
4799 4382 Crs
4842 4382 Crs
4886 4382 Crs
4930 4382 Crs
4974 4382 Crs
5018 4382 Crs
5062 4382 Crs
5105 4382 Crs
5149 4382 Crs
5193 4382 Crs
5237 4382 Crs
5281 4382 Crs
5325 4382 Crs
5368 4382 Crs
5412 4382 Crs
5456 4382 Crs
5500 4382 Crs
5544 4382 Crs
5587 4382 Crs
5631 4382 Crs
5675 4382 Crs
5719 4382 Crs
5763 4382 Crs
5807 4382 Crs
5850 4382 Crs
5894 4382 Crs
5938 4382 Crs
5982 4382 Crs
6026 4382 Crs
6070 4382 Crs
6113 4382 Crs
6157 4382 Crs
6201 4382 Crs
6245 4382 Crs
6289 4382 Crs
6333 4382 Crs
6376 4382 Crs
6420 4382 Crs
6464 4382 Crs
6468 4382 Crs
1977 4347 Crs
1.000 UL
LTb
854 4620 N
854 448 L
6136 0 V
0 4172 V
-6136 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
