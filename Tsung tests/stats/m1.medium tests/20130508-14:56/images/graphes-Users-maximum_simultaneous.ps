%!PS-Adobe-2.0
%%Title: images/graphes-Users-maximum_simultaneous.ps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Wed May  8 15:29:10 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (images/graphes-Users-maximum_simultaneous.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (root)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed May  8 15:29:10 2013)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
854 448 M
6136 0 V
stroke
LTb
854 448 M
63 0 V
6073 0 R
-63 0 V
770 448 M
(-100) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 1143 M
6136 0 V
stroke
LTb
854 1143 M
63 0 V
6073 0 R
-63 0 V
-6157 0 R
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 1839 M
6136 0 V
stroke
LTb
854 1839 M
63 0 V
6073 0 R
-63 0 V
-6157 0 R
( 100) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 2534 M
6136 0 V
stroke
LTb
854 2534 M
63 0 V
6073 0 R
-63 0 V
-6157 0 R
( 200) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 3229 M
6136 0 V
stroke
LTb
854 3229 M
63 0 V
6073 0 R
-63 0 V
-6157 0 R
( 300) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 3925 M
6136 0 V
stroke
LTb
854 3925 M
63 0 V
6073 0 R
-63 0 V
-6157 0 R
( 400) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 4620 M
6136 0 V
stroke
LTb
854 4620 M
63 0 V
6073 0 R
-63 0 V
-6157 0 R
( 500) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 448 M
0 4172 V
stroke
LTb
854 448 M
0 63 V
0 4109 R
0 -63 V
854 308 M
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
1536 448 M
0 3829 V
0 280 R
0 63 V
stroke
LTb
1536 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 100) Cshow
1.000 UL
LTb
1.000 UL
LTa
2218 448 M
0 3829 V
0 280 R
0 63 V
stroke
LTb
2218 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 200) Cshow
1.000 UL
LTb
1.000 UL
LTa
2899 448 M
0 4172 V
stroke
LTb
2899 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 300) Cshow
1.000 UL
LTb
1.000 UL
LTa
3581 448 M
0 4172 V
stroke
LTb
3581 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 400) Cshow
1.000 UL
LTb
1.000 UL
LTa
4263 448 M
0 4172 V
stroke
LTb
4263 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 500) Cshow
1.000 UL
LTb
1.000 UL
LTa
4945 448 M
0 4172 V
stroke
LTb
4945 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 600) Cshow
1.000 UL
LTb
1.000 UL
LTa
5626 448 M
0 4172 V
stroke
LTb
5626 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 700) Cshow
1.000 UL
LTb
1.000 UL
LTa
6308 448 M
0 4172 V
stroke
LTb
6308 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 800) Cshow
1.000 UL
LTb
1.000 UL
LTa
6990 448 M
0 4172 V
stroke
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 900) Cshow
1.000 UL
LTb
1.000 UL
LTb
854 4620 N
854 448 L
6136 0 V
0 4172 V
-6136 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 M
(total) Cshow
grestore
LTb
LCb setrgbcolor
3922 98 M
(unit = sec ) Cshow
LTb
3922 4830 M
( maximum_simultaneous) Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
1694 4487 M
(connected) Rshow
LT0
1778 4487 M
399 0 V
922 1234 M
68 34 V
69 -6 V
68 -7 V
68 97 V
68 -111 V
68 41 V
68 0 V
69 14 V
68 -76 V
68 111 V
68 -35 V
68 -28 V
68 56 V
69 -69 V
68 13 V
68 -48 V
68 0 V
68 7 V
69 14 V
68 -14 V
68 -56 V
68 -7 V
68 49 V
68 -56 V
69 -21 V
68 14 V
68 -21 V
68 0 V
68 35 V
69 -62 V
68 76 V
68 -69 V
68 7 V
68 27 V
68 -14 V
69 -48 V
68 14 V
68 -42 V
68 -42 V
68 56 V
68 -42 V
69 63 V
68 28 V
68 6 V
68 21 V
68 0 V
69 0 V
68 0 V
68 0 V
68 0 V
68 0 V
68 0 V
69 0 V
68 0 V
68 0 V
68 0 V
68 0 V
68 -514 V
69 507 V
68 7 V
68 -7 V
68 -20 V
68 -35 V
69 -56 V
68 63 V
68 -14 V
68 62 V
68 -48 V
68 -285 V
69 333 V
68 7 V
68 0 V
68 -55 V
68 55 V
69 -7 V
68 7 V
68 0 V
68 0 V
68 0 V
68 0 V
69 -7 V
68 -27 V
68 -42 V
68 -132 V
68 181 V
68 0 V
69 -160 V
68 125 V
13 62 V
922 1234 Pls
990 1268 Pls
1059 1262 Pls
1127 1255 Pls
1195 1352 Pls
1263 1241 Pls
1331 1282 Pls
1399 1282 Pls
1468 1296 Pls
1536 1220 Pls
1604 1331 Pls
1672 1296 Pls
1740 1268 Pls
1808 1324 Pls
1877 1255 Pls
1945 1268 Pls
2013 1220 Pls
2081 1220 Pls
2149 1227 Pls
2218 1241 Pls
2286 1227 Pls
2354 1171 Pls
2422 1164 Pls
2490 1213 Pls
2558 1157 Pls
2627 1136 Pls
2695 1150 Pls
2763 1129 Pls
2831 1129 Pls
2899 1164 Pls
2968 1102 Pls
3036 1178 Pls
3104 1109 Pls
3172 1116 Pls
3240 1143 Pls
3308 1129 Pls
3377 1081 Pls
3445 1095 Pls
3513 1053 Pls
3581 1011 Pls
3649 1067 Pls
3717 1025 Pls
3786 1088 Pls
3854 1116 Pls
3922 1122 Pls
3990 1143 Pls
4058 1143 Pls
4127 1143 Pls
4195 1143 Pls
4263 1143 Pls
4331 1143 Pls
4399 1143 Pls
4467 1143 Pls
4536 1143 Pls
4604 1143 Pls
4672 1143 Pls
4740 1143 Pls
4808 1143 Pls
4876 629 Pls
4945 1136 Pls
5013 1143 Pls
5081 1136 Pls
5149 1116 Pls
5217 1081 Pls
5286 1025 Pls
5354 1088 Pls
5422 1074 Pls
5490 1136 Pls
5558 1088 Pls
5626 803 Pls
5695 1136 Pls
5763 1143 Pls
5831 1143 Pls
5899 1088 Pls
5967 1143 Pls
6036 1136 Pls
6104 1143 Pls
6172 1143 Pls
6240 1143 Pls
6308 1143 Pls
6376 1143 Pls
6445 1136 Pls
6513 1109 Pls
6581 1067 Pls
6649 935 Pls
6717 1116 Pls
6785 1116 Pls
6854 956 Pls
6922 1081 Pls
6935 1143 Pls
1977 4487 Pls
1.000 UP
1.000 UL
LT1
LTb
1694 4347 M
(users) Rshow
LT1
1778 4347 M
399 0 V
854 1143 M
68 112 V
68 104 V
69 125 V
68 111 V
68 202 V
68 111 V
68 132 V
68 132 V
69 153 V
68 84 V
68 201 V
68 140 V
68 118 V
68 181 V
69 118 V
68 160 V
68 97 V
68 132 V
68 84 V
69 146 V
68 111 V
68 35 V
68 34 V
68 139 V
68 28 V
69 70 V
68 55 V
68 14 V
68 7 V
68 49 V
69 0 V
68 0 V
68 0 V
68 0 V
68 0 V
68 0 V
69 0 V
68 0 V
68 0 V
68 0 V
68 0 V
68 0 V
69 0 V
68 0 V
68 0 V
68 0 V
68 0 V
69 0 V
68 0 V
68 0 V
68 0 V
68 0 V
68 0 V
69 0 V
68 0 V
68 0 V
68 0 V
68 0 V
68 0 V
69 0 V
68 0 V
68 0 V
68 0 V
68 0 V
69 0 V
68 0 V
68 0 V
68 0 V
68 0 V
68 0 V
69 0 V
68 0 V
68 0 V
68 0 V
68 0 V
69 0 V
68 0 V
68 0 V
68 0 V
68 0 V
68 0 V
69 0 V
68 0 V
68 0 V
68 0 V
68 0 V
68 0 V
69 0 V
68 0 V
13 0 V
854 1143 Crs
922 1255 Crs
990 1359 Crs
1059 1484 Crs
1127 1595 Crs
1195 1797 Crs
1263 1908 Crs
1331 2040 Crs
1399 2172 Crs
1468 2325 Crs
1536 2409 Crs
1604 2610 Crs
1672 2750 Crs
1740 2868 Crs
1808 3049 Crs
1877 3167 Crs
1945 3327 Crs
2013 3424 Crs
2081 3556 Crs
2149 3640 Crs
2218 3786 Crs
2286 3897 Crs
2354 3932 Crs
2422 3966 Crs
2490 4105 Crs
2558 4133 Crs
2627 4203 Crs
2695 4258 Crs
2763 4272 Crs
2831 4279 Crs
2899 4328 Crs
2968 4328 Crs
3036 4328 Crs
3104 4328 Crs
3172 4328 Crs
3240 4328 Crs
3308 4328 Crs
3377 4328 Crs
3445 4328 Crs
3513 4328 Crs
3581 4328 Crs
3649 4328 Crs
3717 4328 Crs
3786 4328 Crs
3854 4328 Crs
3922 4328 Crs
3990 4328 Crs
4058 4328 Crs
4127 4328 Crs
4195 4328 Crs
4263 4328 Crs
4331 4328 Crs
4399 4328 Crs
4467 4328 Crs
4536 4328 Crs
4604 4328 Crs
4672 4328 Crs
4740 4328 Crs
4808 4328 Crs
4876 4328 Crs
4945 4328 Crs
5013 4328 Crs
5081 4328 Crs
5149 4328 Crs
5217 4328 Crs
5286 4328 Crs
5354 4328 Crs
5422 4328 Crs
5490 4328 Crs
5558 4328 Crs
5626 4328 Crs
5695 4328 Crs
5763 4328 Crs
5831 4328 Crs
5899 4328 Crs
5967 4328 Crs
6036 4328 Crs
6104 4328 Crs
6172 4328 Crs
6240 4328 Crs
6308 4328 Crs
6376 4328 Crs
6445 4328 Crs
6513 4328 Crs
6581 4328 Crs
6649 4328 Crs
6717 4328 Crs
6785 4328 Crs
6854 4328 Crs
6922 4328 Crs
6935 4328 Crs
1977 4347 Crs
1.000 UL
LTb
854 4620 N
854 448 L
6136 0 V
0 4172 V
-6136 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
